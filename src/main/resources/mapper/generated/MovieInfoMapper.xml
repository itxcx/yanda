<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanda.mapper.generated.MovieInfoMapper">
  <resultMap id="BasePropertyResultMap" type="com.yanda.entity.generated.MovieInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="mv_id" jdbcType="BIGINT" property="mvId" />
    <result column="mv_name" jdbcType="VARCHAR" property="mvName" />
    <result column="mv_intro" jdbcType="VARCHAR" property="mvIntro" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="classify_id" jdbcType="INTEGER" property="classifyId" />
    <result column="classify_name" jdbcType="VARCHAR" property="classifyName" />
    <result column="img_appendix_id" jdbcType="BIGINT" property="imgAppendixId" />
    <result column="mv_appendix_id" jdbcType="BIGINT" property="mvAppendixId" />
    <result column="episode_count" jdbcType="INTEGER" property="episodeCount" />
    <result column="mv_path" jdbcType="VARCHAR" property="mvPath" />
    <result column="is_public" jdbcType="BOOLEAN" property="isPublic" />
    <result column="public_time" jdbcType="TIMESTAMP" property="publicTime" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.yanda.entity.generated.MovieInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <constructor>
      <idArg column="mv_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="mv_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="mv_intro" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="classify_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="classify_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="img_appendix_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="mv_appendix_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="episode_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="mv_path" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_public" javaType="java.lang.Boolean" jdbcType="BOOLEAN" />
      <arg column="public_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, 
    mv_appendix_id, episode_count, mv_path, is_public, public_time
  </sql>
  <select id="selectByExample" parameterType="com.yanda.entity.generated.MovieInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_mv_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BasePropertyResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_mv_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yanda.entity.generated.MovieInfoExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from t_mv_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.yanda.entity.generated.MovieInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from t_mv_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_mv_info
    <set>
      <if test="record.mvId != null">
        mv_id = #{record.mvId,jdbcType=BIGINT},
      </if>
      <if test="record.mvName != null">
        mv_name = #{record.mvName,jdbcType=VARCHAR},
      </if>
      <if test="record.mvIntro != null">
        mv_intro = #{record.mvIntro,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.classifyId != null">
        classify_id = #{record.classifyId,jdbcType=INTEGER},
      </if>
      <if test="record.classifyName != null">
        classify_name = #{record.classifyName,jdbcType=VARCHAR},
      </if>
      <if test="record.imgAppendixId != null">
        img_appendix_id = #{record.imgAppendixId,jdbcType=BIGINT},
      </if>
      <if test="record.mvAppendixId != null">
        mv_appendix_id = #{record.mvAppendixId,jdbcType=BIGINT},
      </if>
      <if test="record.episodeCount != null">
        episode_count = #{record.episodeCount,jdbcType=INTEGER},
      </if>
      <if test="record.mvPath != null">
        mv_path = #{record.mvPath,jdbcType=VARCHAR},
      </if>
      <if test="record.isPublic != null">
        is_public = #{record.isPublic,jdbcType=BOOLEAN},
      </if>
      <if test="record.publicTime != null">
        public_time = #{record.publicTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_mv_info
    set mv_id = #{record.mvId,jdbcType=BIGINT},
      mv_name = #{record.mvName,jdbcType=VARCHAR},
      mv_intro = #{record.mvIntro,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      classify_id = #{record.classifyId,jdbcType=INTEGER},
      classify_name = #{record.classifyName,jdbcType=VARCHAR},
      img_appendix_id = #{record.imgAppendixId,jdbcType=BIGINT},
      mv_appendix_id = #{record.mvAppendixId,jdbcType=BIGINT},
      episode_count = #{record.episodeCount,jdbcType=INTEGER},
      mv_path = #{record.mvPath,jdbcType=VARCHAR},
      is_public = #{record.isPublic,jdbcType=BOOLEAN},
      public_time = #{record.publicTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BasePropertyResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_mv_info
    where mv_id = #{mvId,jdbcType=BIGINT}
  </select>
</mapper>