<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanda.mapper.generated.CommentInfoMapper">
  <resultMap id="BasePropertyResultMap" type="com.yanda.entity.generated.CommentInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="episode_id" jdbcType="BIGINT" property="episodeId" />
    <result column="agree_count" jdbcType="INTEGER" property="agreeCount" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.yanda.entity.generated.CommentInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <constructor>
      <idArg column="comment_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="comment_content" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="episode_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="agree_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="parent_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="comment_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="nick_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="avatar" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    comment_id, comment_content, create_time, user_id, episode_id, agree_count, parent_id, 
    comment_count, nick_name, avatar
  </sql>
  <select id="selectByExample" parameterType="com.yanda.entity.generated.CommentInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_comment_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BasePropertyResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_comment_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yanda.entity.generated.CommentInfoExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from t_comment_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.yanda.entity.generated.CommentInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from t_comment_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_comment_info
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=BIGINT},
      </if>
      <if test="record.commentContent != null">
        comment_content = #{record.commentContent,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.episodeId != null">
        episode_id = #{record.episodeId,jdbcType=BIGINT},
      </if>
      <if test="record.agreeCount != null">
        agree_count = #{record.agreeCount,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.commentCount != null">
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_comment_info
    set comment_id = #{record.commentId,jdbcType=BIGINT},
      comment_content = #{record.commentContent,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=BIGINT},
      episode_id = #{record.episodeId,jdbcType=BIGINT},
      agree_count = #{record.agreeCount,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BasePropertyResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_comment_info
    where comment_id = #{commentId,jdbcType=BIGINT}
  </select>
  <insert id="upsert" parameterType="com.yanda.entity.generated.CommentInfo">
    <!--
      WARNING - @mbg.generated
    -->
    insert into t_comment_info
    (comment_id, comment_content, create_time, user_id, episode_id, agree_count, parent_id, 
      comment_count, nick_name, avatar)
    values
    (#{commentId,jdbcType=BIGINT}, #{commentContent,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=BIGINT}, #{episodeId,jdbcType=BIGINT}, #{agreeCount,jdbcType=INTEGER}, 
      #{parentId,jdbcType=BIGINT}, #{commentCount,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR})
    on duplicate key update 
    comment_id = #{commentId,jdbcType=BIGINT}, 
    comment_content = #{commentContent,jdbcType=VARCHAR}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    user_id = #{userId,jdbcType=BIGINT}, 
    episode_id = #{episodeId,jdbcType=BIGINT}, 
    agree_count = #{agreeCount,jdbcType=INTEGER}, 
    parent_id = #{parentId,jdbcType=BIGINT}, 
    comment_count = #{commentCount,jdbcType=INTEGER}, 
    nick_name = #{nickName,jdbcType=VARCHAR}, 
    avatar = #{avatar,jdbcType=VARCHAR}
  </insert>
  <insert id="upsertSelective" parameterType="com.yanda.entity.generated.CommentInfo">
    <!--
      WARNING - @mbg.generated
    -->
    insert into t_comment_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="episodeId != null">
        episode_id,
      </if>
      <if test="agreeCount != null">
        agree_count,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="episodeId != null">
        #{episodeId,jdbcType=BIGINT},
      </if>
      <if test="agreeCount != null">
        #{agreeCount,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=BIGINT},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="episodeId != null">
        episode_id = #{episodeId,jdbcType=BIGINT},
      </if>
      <if test="agreeCount != null">
        agree_count = #{agreeCount,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>